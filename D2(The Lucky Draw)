#include<bits/stdc++.h>
using namespace std;
#define MP          make_pair
#define PB          push_back
#define LL          long long
#define MAX         1000005
#define debug(a)    cout<<a<<"\n"
#define sd(a)       scanf("%d",&a)
#define sc(a)       scanf("%c",&a)
#define ss(a)       scanf("%s",&a)
#define mx(a,b,c)   max(a,max(b,c))
#define mn(a,b,c)   min(a,min(b,c))
#define pred(a)     printf("%0.6lf",a)
#define rep(i,x,b)  for(int i=x;i<b;i++)
#define rf          freopen("input1.in", "r", stdin)
#define wf          freopen("out.out", "w", stdout)
#define fast()      ios_base::sync_with_stdio(0)
#define chloop(i,j) cout<<"i:"<<i<<" j:"<<j<<"\n"

const double eps=1e-9;
const double pi =acos(-1);
struct sx{

};


int t1,t2;
LL lcm(LL x, LL y) { return x*1LL*y/__gcd(x, y);}
LL int modpow(LL a,LL x, LL mod){
	int r=1;
	while(x>0)
    if (x&1){ r=(r*a)%mod; --x;}
    else {a=(a*a)%mod;x>>=1;}
	return r%mod ;
}



int n;
int CeilIndex(std::vector<int> &v, int l, int r, int key) {
    while (r-l > 1) {
    int m = l + (r-l)/2;
    if (v[m] >= key)
        r = m;
    else
        l = m;
    }
    return r;
}

int LIS(vector<int> &v) {
    if (n == 0)
        return 0;

   vector<int> tail(n, 0);
   int length = 1;
    tail[0] = v[0];
    for (size_t i = 1; i < n; i++) {
        if (v[i] < tail[0])

            tail[0] = v[i];
        else if (v[i] > tail[length-1])
            tail[length++] = v[i];
        else
            tail[CeilIndex(tail, -1, length-1, v[i])] = v[i];
    }

    return length;
}

int main() {
    fast();
    int t;
    cin>>t;
    while(t--)
    {
        t1=1;
        cin>>n;
        vector<int> v(n);
        rep(i,0,n)
        cin>>v[i];
        rep(i,0,n)
        {
          t1=max(t1,LIS(v));
          t2=v[0];
          rep(i,0,n-1)v[i]=v[i+1];
          v[n-1]=t2;
        }
    cout <<t1<<"\n";

    }

   return 0;
}
